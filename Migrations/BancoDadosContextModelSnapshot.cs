// <auto-generated />
using System;
using LABMedicine.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LABMedicine.Migrations
{
    [DbContext(typeof(BancoDadosContext))]
    partial class BancoDadosContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("LABMedicine.Models.EnfermeiroModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CPF")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CadastroCOFEN")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DataDeNascimento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Genero")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InstituicaoEnsinoFormacao")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("NomeCompleto")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Telefone")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ENFERMEIRO");

                    b.HasData(
                        new
                        {
                            Id = 3,
                            CPF = "667.267.570-18",
                            CadastroCOFEN = "121314",
                            DataDeNascimento = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Genero = "Masculino",
                            InstituicaoEnsinoFormacao = "UFSM",
                            NomeCompleto = "Enf. Willian Tito Silva",
                            Telefone = "91869833"
                        },
                        new
                        {
                            Id = 4,
                            CPF = "945.129.600-07",
                            CadastroCOFEN = "111213",
                            DataDeNascimento = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Genero = "Feminino",
                            InstituicaoEnsinoFormacao = "UFRS",
                            NomeCompleto = "Enf. Maria Fernandes Marques",
                            Telefone = "91698534"
                        });
                });

            modelBuilder.Entity("LABMedicine.Models.MedicoModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CPF")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CadastroCrm")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DataDeNascimento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Especializacao")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("EstadoSistema")
                        .HasColumnType("bit");

                    b.Property<string>("Genero")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InstituicaoEnsinoFormacao")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("MedicoId")
                        .HasColumnType("int");

                    b.Property<string>("NomeCompleto")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("PacienteId")
                        .HasColumnType("int");

                    b.Property<string>("Telefone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TotalAtendimentosRealizados")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("MÉDICO");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CPF = "995.693.440-24",
                            CadastroCrm = "55666/SC",
                            DataDeNascimento = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Especializacao = "Clinico Geral",
                            EstadoSistema = false,
                            Genero = "Masculino",
                            InstituicaoEnsinoFormacao = "UFSC",
                            MedicoId = 0,
                            NomeCompleto = "Dr. Roberto Castro Medeiros",
                            PacienteId = 0,
                            Telefone = "84912333",
                            TotalAtendimentosRealizados = "0"
                        },
                        new
                        {
                            Id = 2,
                            CPF = "864.204.910-37",
                            CadastroCrm = "99666/RS",
                            DataDeNascimento = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Especializacao = "Ortopedista",
                            EstadoSistema = false,
                            Genero = "Feminino",
                            InstituicaoEnsinoFormacao = "UFSM",
                            MedicoId = 0,
                            NomeCompleto = "Dra. Alessandra Souza dos Santos",
                            PacienteId = 0,
                            Telefone = "98653256",
                            TotalAtendimentosRealizados = "0"
                        });
                });

            modelBuilder.Entity("LABMedicine.Models.PacienteModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AguardandoAtendimento")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Atendido")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CPF")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContatoDeEmergencia")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("DataDeNascimento")
                        .HasColumnType("datetime2");

                    b.Property<string>("EmAtendimento")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Genero")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NaoAtendidio")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomeCompleto")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("StatusDeAtendimento")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StatusPaciente")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TotalDeAtendimentos")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("PACIENTE");

                    b.HasData(
                        new
                        {
                            Id = 5,
                            AguardandoAtendimento = "Sim",
                            Atendido = "Não",
                            CPF = "578.330.130-21",
                            ContatoDeEmergencia = "Gustavo 54283",
                            DataDeNascimento = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmAtendimento = "Não",
                            Genero = "Masculino",
                            NomeCompleto = "Pcte.Saulo da Silva",
                            StatusDeAtendimento = "Aguardando atendimento",
                            StatusPaciente = "Ativo",
                            Telefone = "84759836",
                            TotalDeAtendimentos = 0
                        },
                        new
                        {
                            Id = 6,
                            AguardandoAtendimento = "Sim",
                            Atendido = "Não",
                            CPF = "385.486.870-70",
                            ContatoDeEmergencia = "Juliana 289713",
                            DataDeNascimento = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmAtendimento = "Não",
                            Genero = "Masculino",
                            NomeCompleto = "Pcte. Humberto José Teixeira",
                            StatusDeAtendimento = "Aguardando atendimento",
                            StatusPaciente = "Ativo",
                            Telefone = "97563986",
                            TotalDeAtendimentos = 0
                        },
                        new
                        {
                            Id = 7,
                            AguardandoAtendimento = "Não",
                            Atendido = "Não",
                            CPF = "764.712.840-04",
                            ContatoDeEmergencia = "Gabriela 987654",
                            DataDeNascimento = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmAtendimento = "Não",
                            Genero = "Feminino",
                            NomeCompleto = "Pcte. Vanessa Torres ",
                            StatusDeAtendimento = "Aguardando atendimento",
                            StatusPaciente = "Ativo",
                            Telefone = "84579683",
                            TotalDeAtendimentos = 0
                        },
                        new
                        {
                            Id = 8,
                            AguardandoAtendimento = "Não",
                            Atendido = "Não",
                            CPF = "167.149.340-09",
                            ContatoDeEmergencia = "Mateus 674924",
                            DataDeNascimento = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmAtendimento = "Não",
                            Genero = "Masculino",
                            NomeCompleto = "Pcte. Marcio Guedes",
                            StatusDeAtendimento = "Aguardando atendimento",
                            StatusPaciente = "Ativo",
                            Telefone = "84579685",
                            TotalDeAtendimentos = 0
                        },
                        new
                        {
                            Id = 9,
                            AguardandoAtendimento = "Não",
                            Atendido = "Não",
                            CPF = "721.149.230-96",
                            ContatoDeEmergencia = "Fernanda 321654",
                            DataDeNascimento = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmAtendimento = "Não",
                            Genero = "Feminino",
                            NomeCompleto = "Pcte. Maria Aparecida Souza",
                            StatusDeAtendimento = "Aguardando atendimento",
                            StatusPaciente = "Ativo",
                            Telefone = "84593698",
                            TotalDeAtendimentos = 0
                        },
                        new
                        {
                            Id = 10,
                            AguardandoAtendimento = "Sim",
                            Atendido = "Não",
                            CPF = "647.142.010-26",
                            ContatoDeEmergencia = "Maria 15698",
                            DataDeNascimento = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmAtendimento = "Não",
                            Genero = "Maculino",
                            NomeCompleto = "Pcte. Henrique Marques Soares",
                            StatusDeAtendimento = "Aguardando atendimento",
                            StatusPaciente = "Ativo",
                            Telefone = "91689365",
                            TotalDeAtendimentos = 0
                        },
                        new
                        {
                            Id = 11,
                            AguardandoAtendimento = "Sim",
                            Atendido = "Sim",
                            CPF = "628.234.450-64",
                            ContatoDeEmergencia = "Mario 56984",
                            DataDeNascimento = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmAtendimento = "Não",
                            Genero = "Feminino",
                            NomeCompleto = "Pcte. Francisca Almeida dos Santos",
                            StatusDeAtendimento = "Aguardando atendimento",
                            StatusPaciente = "Ativo",
                            Telefone = "91642537",
                            TotalDeAtendimentos = 0
                        },
                        new
                        {
                            Id = 12,
                            AguardandoAtendimento = "Sim",
                            Atendido = "Sim",
                            CPF = "628.234.450-64",
                            ContatoDeEmergencia = "Sergio 58479",
                            DataDeNascimento = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmAtendimento = "Não",
                            Genero = "Masculino",
                            NomeCompleto = "Pcte. João Maria da Silva",
                            StatusDeAtendimento = "Aguardando atendimento",
                            StatusPaciente = "Ativo",
                            Telefone = "91989693",
                            TotalDeAtendimentos = 0
                        },
                        new
                        {
                            Id = 13,
                            AguardandoAtendimento = "Sim",
                            Atendido = "Sim",
                            CPF = "781.389.900-82",
                            ContatoDeEmergencia = "Gertrude 47892",
                            DataDeNascimento = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmAtendimento = "Não",
                            Genero = "Masculino",
                            NomeCompleto = "Pcte. Alexandre Mattos",
                            StatusDeAtendimento = "Aguardando atendimento",
                            StatusPaciente = "Ativo",
                            Telefone = "96939291",
                            TotalDeAtendimentos = 0
                        },
                        new
                        {
                            Id = 14,
                            AguardandoAtendimento = "Sim",
                            Atendido = "Sim",
                            CPF = "677.746.870-68",
                            ContatoDeEmergencia = "Cesar 548915",
                            DataDeNascimento = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmAtendimento = "Sim",
                            Genero = "Feminino",
                            NomeCompleto = "Pcte. Vitória Mengue",
                            StatusDeAtendimento = "Aguardando atendimento",
                            StatusPaciente = "Ativo",
                            Telefone = "97989495",
                            TotalDeAtendimentos = 0
                        });
                });

            modelBuilder.Entity("LABMedicine.Models.StatusModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CPF")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DataDeNascimento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Genero")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomeCompleto")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("StatusAtendimento")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TotalAtendimentosRealizados")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Status");
                });
#pragma warning restore 612, 618
        }
    }
}
